{"version":3,"sources":["component/list.js","component/form.js","component/body.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","textAlign","textField","width","marginRight","spacing","marginTop","dense","menu","button","margin","background","buttone","padding","formControl","minWidth","Form","state","isEdit","toggleState","setState","updateRow","e","preventDefault","props","editRow","index","inputname","value","ageValue","RenderSimpleForm","classes","className","details","name","age","Button","variant","type","onClick","deleteRow","this","ValidationTextField","withStyles","root","color","borderColor","borderWidth","TextField","inputLabel","React","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","noValidate","autoComplete","onSubmit","id","label","defaultValue","inputRef","v","FormControl","InputLabel","ref","htmlFor","Select","onChange","target","input","OutlinedInput","MenuItem","Component","ToDoForm","addRow","updateName","updateAge","Body","inject","observer","studentsStore","toJS","allList","students","map","list","key","observable","console","log","alert","lists","push","bake_cookie","read_cookie","splice","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.832a7899.chunk.js","sourcesContent":["import React , {Component , Fragment} from 'react';\nimport { makeStyles ,withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport '../App.css';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    textAlign : 'center'\n  },\n  textField: {\n    width:\"40%\",\n    marginRight: theme.spacing(2),\n    marginTop:\"10px\"\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n    background: \"#7f2a65\"\n  },\n  buttone: {\n    margin: theme.spacing(1),\n    padding:\"15px\",\n    background: \"#7f2a65\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n\n\nclass Form  extends Component {\n\n  state = {\n    isEdit : false\n  }\n\n    //toggle State\n\n    toggleState = () =>{\n      let {isEdit} = this.state ;\n      this.setState({\n        isEdit : !isEdit\n      })\n    }\n\n    updateRow = (e) => {\n      e.preventDefault();\n      this.props.editRow(this.props.index,this.inputname.value,this.ageValue);\n      this.toggleState();\n    }\n\n\n\nRenderSimpleForm = () => {\n\n    const classes = this.props;\n     return (\n       <div>\n      <span className=\"span1\" >{this.props.details.name} </span>\n      <span  className=\"span2\" >{this.props.details.age}</span>\n      <Button className=\"buttonAdd\" variant=\"contained\" type=\"submit\"  onClick={ () => {this.toggleState()}}>Edit  </Button>\n       <Button variant=\"contained\" type=\"submit\" className={classes.button}\n        onClick={ () => {this.props.deleteRow(this.props.index)}}>\n          Delete\n        </Button>\n      </div>\n    )\n}\n\nrender (){\n\n  let {isEdit} = this.state ;\n\n  const ValidationTextField = withStyles({\n    root: {\n      '& input:valid + fieldset': {\n        // borderColor: '#fff',\n        // borderWidth: 2,\n        color:\"#FFF\"\n      },\n      '& input:invalid + fieldset': {\n        borderColor: 'red',\n        borderWidth: 2,\n      },\n      '& input:valid:focus + fieldset': {\n        // borderColor: '#FFF',\n        color:\"#FFF\"\n      },\n    },\n  })(TextField);\n\n  //render update addRow\n  const RenderUpdateRow = () => {\n\n    const classes = useStyles();\n      const inputLabel = React.useRef(null);\n      const [labelWidth, setLabelWidth] = React.useState(0);\n      React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n      }, []);\n\n     return (\n    <form  className={classes.container} noValidate autoComplete=\"off\" onSubmit={this.updateRow}>\n     <ValidationTextField\n             id=\"outlined-name\"\n             label=\"Name\"\n             className={classes.textField}\n             defaultValue={this.props.details.name}\n             margin=\"normal\"\n             variant=\"outlined\"\n             inputRef={(v) => {this.inputname = v} }\n           />\n           <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel ref={inputLabel} htmlFor=\"age-customized-select\">\n              Age\n            </InputLabel>\n            <Select\n              value={this.props.details.age}\n              onChange={(e) => {this.ageValue = e.target.value }}\n              input={<OutlinedInput labelWidth={labelWidth} name=\"age\" id=\"age-customized-select\" />}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </FormControl>\n           <Button variant=\"contained\" type=\"submit\" className={classes.buttone}>\n              Update\n            </Button>\n     </form>\n   )\n        }\n\n   return (\n\n     <Fragment>\n     <ul>\n     {isEdit ?  <RenderUpdateRow details={this.props.details}/> : this.RenderSimpleForm() }\n     </ul>\n     </Fragment>\n\n  )};\n}\n\nexport default Form;\n","\nimport React from 'react';\nimport { makeStyles , withStyles} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FormControl from '@material-ui/core/FormControl';\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    textAlign : 'center'\n  },\n  textField: {\n    // marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginTop:\"9px\",\n    width:\"40%\",\n    color:\"#FFF\"\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n      background: \"#f9c017\",\n      padding:\"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n\nconst ToDoForm = props => {\n\n  const classes = useStyles();\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const ValidationTextField = withStyles({\n    root: {\n      '& input:valid + fieldset': {\n        // borderColor: '#fff',\n        // borderWidth: 2,\n        color:\"#FFF\"\n      },\n      '& input:invalid + fieldset': {\n        borderColor: 'red',\n        borderWidth: 2,\n      },\n      '& input:valid:focus + fieldset': {\n        // borderColor: '#FFF',\n        color:\"#FFF\"\n      },\n    },\n  })(TextField);\n\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={props.addRow}>\n        <TextField \n                id=\"outlined-basic\"\n                label=\"Name\"\n                className={classes.textField}\n                value={props.current}\n                onChange={props.updateName}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n               <InputLabel ref={inputLabel} htmlFor=\"age-customized-select\">\n                 Age\n               </InputLabel>\n               <Select\n                 value={props.age}\n                 onChange={props.updateAge}\n                 input={<OutlinedInput labelWidth={labelWidth} name=\"age\" id=\"age-customized-select\" />}\n\n               >\n                 <MenuItem value=\"\">\n                   <em>None</em>\n                 </MenuItem>\n                 <MenuItem value={10}>Ten</MenuItem>\n                 <MenuItem value={20}>Twenty</MenuItem>\n                 <MenuItem value={30}>Thirty</MenuItem>\n               </Select>\n             </FormControl>\n              <Button variant=\"contained\" type=\"submit\" className={classes.button}>\n                 Add New\n               </Button>\n    </form>\n)\n}\n\nexport default ToDoForm ;\n","import React, {  Component , Fragment} from \"react\";\nimport List from \"./list.js\";\nimport Form from \"./form.js\";\nimport {inject,observer} from 'mobx-react';\nimport { toJS } from 'mobx';\n\n\n@inject('studentsStore')\n@observer\nclass Body extends Component {\n\n\n  render () {\n\n    const studentsStore = toJS(this.props.studentsStore) ;\n    // console.log(studentsStore.students);\n\n    const allList = studentsStore.students.map ((list , index) => {\n      return <List details={list}  key={index} index={index} deleteRow={studentsStore.deleteRow} editRow={studentsStore.editRow}/>\n    }) ;\n\n    return (\n      <Fragment>\n        <Form updateName={studentsStore.updateName} updateAge={studentsStore.updateAge} addRow={studentsStore.addRow}\n        current={studentsStore.current} age={studentsStore.age} />\n        <div>{allList}</div>\n      </Fragment>\n    )\n};\n\n}\n\nexport default Body ;\n","import { observable } from \"mobx\";\nimport { bake_cookie, read_cookie } from 'sfcookies';\n\n\nclass AllStudents {\n\n\n  @observable\n  students = [\n    {\n      name: \"Ahmed\",\n      age: \"12\",\n    },\n    {\n      name: \"Ali\",\n      age: \"20\"\n    },\n    {\n      name: \"Lila\",\n      age: \"20\"\n    },\n  ];\n\n\n  @observable\n  age = '' ;\n\n  @observable\n  current = '' ;\n\n  //update age\n  @observable\n   updateAge = e => {\n    this.age = e.target.value ;\n      // console.log(e.target.value);\n  }\n\n  //updateRow\n  @observable\n    updateName = (e) => {\n      this.current = e.target.value ;\n        // console.log(e.target.value);\n    }\n\n\n//addRow\n@observable\n  addRow = (e) => {\n    e.preventDefault();\n   console.log(this.current);\n    if(this.current === \"\" || this.age === \"\"){\n     alert('Please complete all feilds');\n    }else{\n      let lists = this.students;\n      lists.push({name : this.current , age: this.age});\n      bake_cookie(\"lists\",lists);\n      lists = read_cookie(lists);\n    }\n  }\n\n  //Delete Row\n  @observable\n  deleteRow = (index) => {\n    let lists = this.students;\n    lists.splice(index,1);\n    bake_cookie(\"lists\",lists);\n    lists = read_cookie(lists);\n  }\n\n  //Edit Row\n  @observable\n  editRow = (index , value , age ) => {\n  let lists = this.students ;\n  let list = lists[index];\n  list['name'] = value ;\n  list['age'] = age ;\n  }\n}\n\nconst studentsStore = new AllStudents();\n\nexport default studentsStore;\n","import React from 'react';\nimport Body from \"./component/body.js\";\nimport { Provider } from 'mobx-react';\nimport studentsStore from \"./store/store.js\";\n// import { observer } from \"mobx-react-lite\";\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <Provider studentsStore = {studentsStore}>\n    <div className=\"App\">\n    <div className=\"container\">\n      <header>Simple Form</header>\n      <Body />\n    </div>\n  </div>\n  </Provider>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}